@page "/battle/{HeroId:guid}/{MonsterId:guid}"
@using BloodSword.Domain.Characters
@using BloodSword.Domain.Repositories
@inject IHeroRepository HeroRepository
@inject IMonsterRepository MonsterRepository
@inject NavigationManager NavigationManager

@if (hero == null)
{
    <p><em>Зареждане или герой не е намерен...</em></p>
}
else
{
    <h3>Битка!</h3>
    <hr />

    <div class="row">
        <div class="col-6">
            <h4>@hero.Name</h4>
            <p>Живот: @hero.Health / @hero.MaxHealth</p>
        </div>
        <div class="col-6">
            <h4>@monster.Name</h4>
            <p>Живот: @monster.Health / @monster.MaxHealth</p>
        </div>
    </div>

    <hr />

    @if (battleLog.Any())
    {
        <div class="card bg-light p-3 mt-3">
            @foreach (var log in battleLog)
            {
                <p>@log</p>
            }
        </div>
    }

    @if (isBattleOver)
    {
        <h4 class="mt-3">Битката приключи! @battleResult</h4>
        <button class="btn btn-primary mt-3" @onclick="NavigateBack">Обратно към списъка</button>
    }
    else
    {
        <button class="btn btn-danger mt-3" @onclick="Attack">Атакувай</button>
    }
}

@code {
    [Parameter]
    public Guid HeroId { get; set; }

    [Parameter]
    public Guid MonsterId { get; set; }

    private Hero hero;
    private Monster monster;
    private List<string> battleLog = new List<string>();
    private bool isBattleOver = false;
    private string battleResult;

    protected override async Task OnInitializedAsync()
    {
        hero = await HeroRepository.GetByIdAsync(HeroId);
        monster = await MonsterRepository.GetByIdAsync(MonsterId);
    }

    private async void Attack()
    {
        // Героят атакува
        var heroDamage = hero.AttackSkill > monster.DefenseSkill ? hero.AttackSkill - monster.DefenseSkill : 0;
        monster.Health -= heroDamage;
        battleLog.Add($"{hero.Name} нанася {heroDamage} щети на {monster.Name}!");

        if (monster.Health <= 0)
        {
            monster.Health = 0;
            isBattleOver = true;
            battleResult = $"{hero.Name} победи {monster.Name}!";
            return;
        }

        // Чудовището атакува
        var monsterDamage = monster.AttackSkill > hero.DefenseSkill ? monster.AttackSkill - hero.DefenseSkill : 0;
        hero.Health -= monsterDamage;
        battleLog.Add($"{monster.Name} нанася {monsterDamage} щети на {hero.Name}!");

        if (hero.Health <= 0)
        {
            isBattleOver = true;
            battleResult = $"{monster.Name} победи {hero.Name}!";
        }

        if (isBattleOver)
        {
            await HeroRepository.UpdateAsync(hero);
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/heroes");
    }
}