@page "/hero/{HeroId:guid}"
@using BloodSword.Domain.Characters
@using BloodSword.Domain.Items
@using BloodSword.Domain.Repositories
@inject IHeroRepository HeroRepository
@inject NavigationManager NavigationManager

@if (hero == null)
{
    <p><em>Зареждане или герой не е намерен...</em></p>
}
else
{
    <h3>@hero.Name</h3>
    <hr>
    <p><strong>Клас:</strong> @hero.GetType().Name</p>
    <p><strong>Живот:</strong> @hero.Health / @hero.MaxHealth</p>
    <p><strong>Атака:</strong> @hero.AttackSkill</p>
    <p><strong>Защита:</strong> @hero.DefenseSkill</p>

    @if (hero is Enchanter enchanter)
    {
        <p><strong>Заклинания:</strong> @string.Join(", ", enchanter.Spells)</p>
    }
    else if (hero is Sage sage)
    {
        <p><strong>Мистично познание:</strong> @sage.ArcaneKnowledge</p>
    }
    else if (hero is Trickster trickster)
    {
        <p><strong>Умение за промъкване:</strong> @trickster.StealthSkill</p>
    }

    <hr />
    <p><strong>⭐ Ранг:</strong> @hero.Rank</p>
    <p><strong>💰 Злато:</strong> @hero.Gold</p>
    <p><strong>✨ Опит:</strong> @hero.Experience</p>

    <hr>

    <h4>Инвентар</h4>
    @if (hero.Inventory.Any())
    {
        <ul class="list-group">
            @foreach (var item in hero.Inventory)
            {
                <li class="list-group-item">
                    <strong>@item.Name</strong>
                    <br />
                    <small>@item.Description</small>
                </li>
            }
        </ul>
    }
    else
    {
        <p>Инвентарът е празен.</p>
    }

    <div class="mt-3">
        <a href="/edit-hero/@hero.Id" class="btn btn-warning">Редактирай герой</a>
        <a href="/select-monster/@hero.Id" class="btn btn-danger">Започни битка</a>
        <button class="btn btn-primary" @onclick="NavigateBack">Обратно към списъка</button>
        <a href="/manage-inventory/@hero.Id" class="btn btn-info">Управление на инвентара</a>
    </div>
}

@code {
    [Parameter]
    public Guid HeroId { get; set; }

    private Hero hero;

    protected override async Task OnInitializedAsync()
    {
        hero = await HeroRepository.GetByIdAsync(HeroId);
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/heroes");
    }
}